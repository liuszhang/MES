@model IEnumerable<MES_MVC.Models.Product>

@{
    ViewBag.Title = "产品管理";
}

<h2>产品管理</h2>

@Html.DevExpress().GridView(
    settings =>
    {
        settings.Name = "gvGrouping";
        //settings.CallbackRouteValues = new { Controller = "Products", Action = "Index" };
        //settings.CustomActionRouteValues = new { Controller = "Products", Action = "Index" };


        settings.SettingsBehavior.ConfirmDelete = true;
        settings.SettingsEditing.Mode = GridViewEditingMode.Inline;
        //settings.Settings.ShowGroupPanel = true;
        //settings.Settings.ShowFooter = true;
        settings.SettingsContextMenu.Enabled = true;
        //settings.SettingsBehavior.EnableCustomizationWindow = true;
        settings.SettingsEditing.AddNewRowRouteValues = new { Action = "AddNewRowContextMenuPartial", Controller = "Columns" };
        settings.SettingsEditing.UpdateRowRouteValues = new { Action = "UpdateRowContextMenuPartial", Controller = "Columns" };
        settings.SettingsEditing.DeleteRowRouteValues = new { Action = "DeleteRowContextMenuPartial", Controller = "Columns" };


        settings.Width = Unit.Percentage(100);

        settings.Columns.Add("ID");

        settings.Columns.Add("Name");
        settings.Columns.Add("Number");
        settings.Columns.Add("Count");
        //settings.Columns.Add("Type").GroupIndex = 0;
        settings.Columns.Add(c =>
        {
        c.FieldName = "Type";
        c.Caption = "类型";
        c.GroupIndex = 0;
        c.SortOrder = DevExpress.Data.ColumnSortOrder.Descending;

        c.ColumnType = MVCxGridViewColumnType.ComboBox;
        
        });

        //settings.BeforeGetCallbackResult = (sender, e) =>
        //{
        //    //if (ViewBag.GroupedColumns == null)
        //    //    return;

        //    MVCxGridView grid = (MVCxGridView)sender;
        //    //string[] columnNames = ViewBag.GroupedColumns.Split(';');
        //    grid.ClearSort();
        //    //foreach (string name in columnNames)
        //    //{
        //    //    grid.GroupBy(grid.Columns[name]);
        //    //}
        //    grid.ExpandAll();
        //};

        settings.PreRender = (s, e) =>
        {
            var grid = s as MVCxGridView;
            if (grid != null)
                grid.ExpandAll();
        };
    }).Bind(Model).GetHtml()


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Number)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Count)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Type)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Count)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
